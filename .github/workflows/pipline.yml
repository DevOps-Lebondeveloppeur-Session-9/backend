name: backend-pipeline

env:
    DOCKER_IMAGE_NAME: talel12/backend-session9

on:
    push:
        branches: [main]

jobs:
    sonarQube:
      name: SonarQube
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: SonarQube Scan
          uses: SonarSource/sonarqube-scan-action@v5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                    node-version: 18

            - name: check node version
              run: node -v

            - name: setup dependencies
              run: npm install
            
            - name: run unit tests
              run: npm run test

    # ✅ Secret Scanning (Gitleaks)
    gitleaks-secret-scan-job:
      runs-on: ubuntu-latest
      needs: [ sonarQube, unit-test]
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Run Gitleaks Scan
          uses: gitleaks/gitleaks-action@v2
          env:
            GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
    
     # ✅ Docker Image Scanning (Trivy)
    trivy-image-security-scan-job:
      runs-on: ubuntu-latest
      needs: [ sonarQube, unit-test]
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Install dependencies
          run: sudo apt-get update && sudo apt-get install -y curl

        - name: Download and install Trivy
          run: |
            curl -sSL https://github.com/aquasecurity/trivy/releases/download/v0.29.0/trivy_0.29.0_Linux-64bit.tar.gz -o trivy.tar.gz
            tar xzvf trivy.tar.gz
            sudo mv trivy /usr/local/bin/
            trivy --version
        - name: Run Trivy Docker image vulnerability scan
          run: |
            docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
            trivy image ${{ env.DOCKER_IMAGE_NAME }}
      
    build-and-push-docker-image:
        runs-on: ubuntu-latest
        needs: [trivy-image-security-scan-job, gitleaks-secret-scan-job]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: build docker image
              run: docker build -t ${{ env.DOCKER_IMAGE_NAME}} .

            - name: tag docker image
              run: docker tag ${{ env.DOCKER_IMAGE_NAME}} ${{ env.DOCKER_IMAGE_NAME}}:v${{ github.run_number }}
            
            - name: docker login
              uses: docker/login-action@v2
              with:
                username: ${{ vars.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: push versioned docker image
              run: docker push ${{ env.DOCKER_IMAGE_NAME}}:v${{ github.run_number }}
                
            - name: push latest docker image
              run: docker push ${{ env.DOCKER_IMAGE_NAME}}

    deploy-to-vps:
        runs-on: ubuntu-latest
        needs: [build-and-push-docker-image]
        steps:
            - name: Execute remote SSH commands using password
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.VPS_HOST }}
                username: ${{ vars.VPS_USERNAME }}
                password: ${{ secrets.VPS_PASSWORD }}
                script: |
                  cd /home/user/devops-script/develop/backend
                  sudo git pull
                  sudo docker pull ${{ env.DOCKER_IMAGE_NAME}}
                  sudo docker compose up -d --force-recreate --remove-orphans